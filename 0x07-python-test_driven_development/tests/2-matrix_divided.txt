==============================
How to Use 2-matrix_divided.py
==============================

This module defines a function that divides all elements of a matrix
 by a div "matrix_divided(matrix, div").

Usage
=====

"matrix_divided(matrix, div")" returns a new matrix where
all elements of the matrix is divided by div rounded to 2 decimal places.

::

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Note that quotients are rounded to a maximum of two decimal places.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix is unchanged:

::
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

The function can handle floating-pointing numbers.

::

    >>> matrix = [
    ...     [1.1, 2.2, 3.3],
    ...     [4.4, 5.5, 6.6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.37, 0.73, 1.1], [1.47, 1.83, 2.2]]

The matrix must be a list of lists.

::

    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = "Matrix"
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

list of lists as matrix with an empty list of lists will pass.
::

    >>> matrix = [[]]
    >>> matrix_divided(matrix, 3)
    [[]]

matrix containing elements of non-integers or floats.

::

    >>> matrix = [
    ...     [1, 2, "Hello"],
    ...     [4, "Hi", 5]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Div must be an integer or float.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided(matrix, "Hello")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Div cannot be zero.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Each row of the matrix must be of the same size.

::

    >>> matrix = [
    ...     [1, 2],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
