===========================
Usage of 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b = 98)``.

How to use:
===========

``add_integer(a, b = 98)`` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

        >>> add_integer = __import__("0-add_integer").add_integer
        >>> add_integer(5, 3)
        8

        >>> add_integer(5, -3)
        2

Testing floating-point values and the result after the addition is rounded up or cast into integer.

        >>> add_integer(4.0, 3.0)
        7

        >>> add_integer(9.9, 2.0)
        12

        >>> add_integer(-2.5, -0.1)
        -3

        >>> add_integer(2.5, 3)
        6

Testing only with one argument, since the second one is optional

        >>> add_integer(5)
        103

Testing with strings and none numbers like None.

        >>> add_integer("Mami", 3)
        Traceback (most recent call last):
        TypeError: a must be an integer

        >>> add_integer(3, "mami")
        Traceback (most recent call last):
        TypeError: b must be an integer

        >>> add_integer(None)
        Traceback (most recent call last):
        TypeError: a must be an integer

        >>> add_integer(2.3, None)
        Traceback (most recent call last):
        TypeError: b must be an integer

        >>> add_integer("Hello", "mami")
        Traceback (most recent call last):
        TypeError: a must be an integer

Testing if infinity is provided and it should fail if provided.

        >>> add_integer(float("inf"))
        Traceback (most recent call last):
        OverflowError: cannot convert float infinity to integer

        >>> add_integer(2, float("inf"))
        Traceback (most recent call last):
        OverflowError: cannot convert float infinity to integer

Testing NaN = Not a number

        >>> add_integer(float("nan"))
        Traceback (most recent call last):
        ValueError: cannot convert float NaN to integer

        >>> add_integer(4, float("nan"))
        Traceback (most recent call last):
        ValueError: cannot convert float NaN to integer
